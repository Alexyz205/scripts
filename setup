#!/bin/bash
set -euo pipefail

# ===============================================
# Dotfiles Setup and Configuration
# ===============================================
# Creates necessary directories and symlinks for dotfiles configuration.
# This script handles the core setup process for the dotfiles environment.
#
# Author: Alexis
# Version: 2.0
# Last Updated: 2025-08-07

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"

# Initialize error handling
if [ -f "$SCRIPT_DIR/error_handling" ]; then
    source "$SCRIPT_DIR/error_handling"
    init_error_handling "setup"
else
    set -euo pipefail
fi

source "$SCRIPT_DIR/logs"
source "$SCRIPT_DIR/utils"

export XDG_CONFIG_HOME="$HOME/.config"

# Process help option first
if [[ "${1:-}" == "--help" ]]; then
    section_header "Dotfiles Setup"
    echo "Usage: setup [--help]"
    echo "This script creates necessary directories and symlinks for dotfiles configuration."
    echo
    echo "Configuration directories will be created at:"
    echo "  $XDG_CONFIG_HOME"
    echo
    echo "The following configurations will be linked:"
    echo "  - ghostty       - Modern terminal emulator"
    echo "  - nix           - Nix package manager"
    echo "  - tmux          - Terminal multiplexer"
    echo "  - git           - Git configuration"
    echo "  - nvim          - Neovim text editor"
    echo "  - starship      - Cross-shell prompt"
    echo "  - zsh           - Z shell configuration"
    echo "  - bash          - Bash shell configuration"
    exit 0
fi

section_header "Dotfiles Setup"

log "Configuration will be set up in $HOME and $XDG_CONFIG_HOME"

# ===============================================
# Environment Validation
# ===============================================

# Get and validate dotfiles directory
if [ -z "${DOTFILES_DIR:-}" ]; then
    DOTFILES_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
    log_warning "DOTFILES_DIR not set, auto-detected: $DOTFILES_DIR"
else
    log_progress "Using provided dotfiles directory: $DOTFILES_DIR"
fi

# Validate dotfiles directory exists and is accessible
if [ ! -d "$DOTFILES_DIR" ]; then
    error_exit "Dotfiles directory does not exist: $DOTFILES_DIR"
fi

if [ ! -r "$DOTFILES_DIR" ]; then
    error_exit "Cannot read dotfiles directory: $DOTFILES_DIR"
fi

export DOTFILES_DIR
log_success "Dotfiles directory validated: $DOTFILES_DIR"

# ===============================================
# Configuration Definitions
# ===============================================

# Define common directories to create
common_directories=(
    "$XDG_CONFIG_HOME"
    "$XDG_CONFIG_HOME/eza"
    "$XDG_CONFIG_HOME/lazygit"
    "$XDG_CONFIG_HOME/lazydocker"
    "$XDG_CONFIG_HOME/yazi"
)

# Define symlinks to create (source:target)
common_items=(
  "config/ghostty:$XDG_CONFIG_HOME/ghostty"
  "config/nix:$XDG_CONFIG_HOME/nix"
  "config/tmux/.tmux.conf:$HOME/.tmux.conf"
  "config/git/config:$HOME/.gitconfig"
  "nvim:$XDG_CONFIG_HOME/nvim"
  "config/starship/starship.toml:$XDG_CONFIG_HOME/starship.toml"
  "config/eza/theme.yml:$XDG_CONFIG_HOME/eza/theme.yml"
  "config/lazygit/config.yml:$XDG_CONFIG_HOME/lazygit/config.yml"
  "config/lazygit/config.yml:$XDG_CONFIG_HOME/lazydocker/config.yml"
  "config/yazi:$XDG_CONFIG_HOME/yazi"
  "shell/zsh:$XDG_CONFIG_HOME/zsh"
  "shell/zsh/.zprofile:$HOME/.zprofile"
  "shell/zsh/.zshrc:$HOME/.zshrc"
  "shell/bash/.bashrc:$HOME/.bashrc"
)

# ===============================================
# Setup Execution
# ===============================================

log_progress "Creating required directories"
if ! create_directories "${common_directories[@]}"; then
    error_exit "Failed to create required directories"
fi

section_header "Creating Symlinks"

log_progress "Setting up configuration symlinks"
if ! create_symlinks "${common_items[@]}"; then
    error_exit "Failed to create required symlinks"
fi

section_header "Setup Complete"
log_complete "Dotfiles have been successfully configured!"
echo
echo "The following configurations have been set up:"
echo "  - Shell       - ZSH and Bash configurations"
echo "  - Terminal    - Ghostty terminal and tmux multiplexer"
echo "  - Git         - Git configuration"
echo "  - Editor      - Neovim configuration"
echo "  - Prompt      - Starship cross-shell prompt"
echo "  - Package Mgr - Nix configuration"
echo
echo "You may need to restart your shell or terminal to see the changes"
